//
//  ListPhoneInteractorTests.swift
//  CleanSwiftBuyersGuide
//
//  Created by Kanjanaporn on 4/9/2562 BE.
//  Copyright (c) 2562 SCBiOS. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CleanSwiftBuyersGuide
import XCTest

class ListPhoneInteractorTests: XCTestCase {
    // MARK: Subject under test

    var sut: ListPhoneInteractor!
    var presenterSpy: ListPhoneInteractorSpy!

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        setupListPhoneInteractor()
    }

    override func tearDown() {
        super.tearDown()
    }

    // MARK: Test setup

    func setupListPhoneInteractor() {
        sut = ListPhoneInteractor()
        presenterSpy = ListPhoneInteractorSpy()
        sut.presenter = presenterSpy
    }

    // MARK: Test doubles

    class ListPhoneInteractorSpy: ListPhonePresenterInterface {
        var listResponse: ListPhoneModels.GetMobileList.Response?
        var listResponseSorting: ListPhoneModels.SortListPhone.Response?

        func presentListPhone(response: ListPhoneModels.GetMobileList.Response) {
            listResponse = response
        }

        func presentListPhoneSorting(response: ListPhoneModels.SortListPhone.Response) {
            listResponseSorting = response
        }

        func presentNavigate() {
        }
    }

    class workerSpy: ListPhoneWorker {
        override func getPhoneInfo(completion: @escaping (Result<[ApiPhone], Error>) -> Void) {
            completion(.success([ApiPhone(id: 0, name: "pro", price: 100.0, thumbImageURL: "", rating: 10.9, description: "")]))
        }
    }

    // MARK: Tests

    // Given
    func testGetApi() {
        sut.worker = workerSpy()
        let request = ListPhoneModels.GetMobileList.Request()
//      when
        sut.getApi(request: request)
//      then
        if let response = presenterSpy.listResponse {
            let phone = ApiPhone(id: 0, name: "pro", price: 100.0, thumbImageURL: "", rating: 10.9, description: "")
            XCTAssertEqual(response.Array, [phone])

        } else {
            XCTFail()
        }
    }

    func testGetApiSorting() {
        let request = ListPhoneModels.SortListPhone.Request(sortingCase: .highttoLow)
        sut.getApiSorting(request: request)

        if let response = presenterSpy.listResponse {
            XCTAssertEqual(response.Array.count, 1)
            XCTAssertEqual(response.Array[0].id, 0)
        }
    }
}
